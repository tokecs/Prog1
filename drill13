#include "./GUI/Simple_window.h"
#include "./GUI/Graph.h"

using namespace Graph_lib;
typedef Graph_lib::Rectangle rect;

rect makeRect(double x, double y, Color fillColour = Color::invisible, Color lineColour = Color::black){
	rect r(Point{ x, y }, 100, 100);
	r.set_fill_color(fillColour);
	r.set_color(lineColour);
	return r;
}

int main(){
	Simple_window win{ Point{100,0}, 800, 1000, "Chapter 13" };
	const double spaceSize = 100;
	const double gridSize = 800;
	Lines grid;
	for (double i = spaceSize; i < gridSize; i += spaceSize){
		grid.add(Point{ i, 0 }, { Point(i, gridSize) });
		grid.add(Point{ 0, i }, { Point(gridSize, i) });
	}
	grid.set_color(Color::black);
	vector<rect> v_rects;
	for (double i = 0; i < 800; i += 100)
		v_rects.push_back(makeRect(i, i, Color::red, Color::invisible));
	for (int i = 0; i < v_rects.size(); i++)
		win.attach(v_rects[i]);
	Image i1{ Point{0, 300}, "./GUI/cica.jpg" }; win.attach(i1);
	Image i2{ Point{300, 0},"./GUI/cica.jpg" }; win.attach(i2);
	Image i3{ Point{600, 300}, "./GUI/cica.jpg" }; win.attach(i3);
  double rngX = RNG();
	double rngY = RNG();
	Image i4{ Point{rngX, rngY}, "./GUI/cica.jpg" }; win.attach(i4);
	win.attach(grid);
	while (win.wait_for_button()){
		rngX = RNG();
		rngY = RNG();
		i4.changePoint(rngX, rngY);
	}
}
